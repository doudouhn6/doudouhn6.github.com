#!/bin/bash
#centos7+httpd+v2ray
local_addr=`curl -s ipv4.icanhazip.com`
#local_addr=`curl ipinfo.io/ip`
read -p "请输入你的一级域名(如:google.com):" your_domain
real_addr=`ping ${your_domain} -c 1 | sed '1{s/[^(]*(//;s/).*//;q}'`
#real_addr=`ping tiffme.gq -c 1 | grep PING | awk '{print $3}' | sed -e 's@(@@g' -e 's@)@@g'`
if ping ${your_domain} -c 1 &> /dev/null;then
	if [[ "$real_addr" == "$local_addr" ]];then
		if [[ "${your_domain}" =~ [[:alnum:]]{1,}\.[[:alnum:]]{1,}\.{1}[[:lower:]]{1,} ]];then
			your_domain=`echo $your_domain | sed -e 's@^[[:alnum:]]\{1,\}\>\.@@g'`
			echo "域名正确，并已自动转换成一级域名$your_domain，开始安装"
		else
			echo "域名正确，开始安装"
		fi
	else
		echo "域名不匹配，退出安装"
		exit 5
	fi
else
	echo "无此域名，退出安装"
	exit 6
fi


read -p "请输入你的邮箱:" your_mail
if ! [[ $your_mail =~ ^[[:alnum:]]{1,}@{1}[[:alnum:]]{1,}\.{1}[[:lower:]]{1,}$ ]];then
	your_mail=your_mail@gmail.com
	echo "邮箱格式错误，已自动设置为your_mail@gmail.com"
else
	echo "你的邮箱是:$your_mail"
fi


if [ `free -m | awk '$1=="Swap:" {print $2}'` -eq 0 ]; then
	echo "swap为`free -m | awk '$1=="Swap:" {print $2}'`,新建swap"
	
	mkdir -pv /swap

	dd if=/dev/zero of=/swap/swapfile bs=1M count=1024
	#fallocate -l 2G /swap/swapfile

	chmod 600 /swap/swapfile

	mkswap -L SWAPFILE /swap/swapfile
	#blkid /swap/swapfile

	swapon /swap/swapfile

	echo "/swap/swapfile swap swap defaults 0 0" >> /etc/fstab
	#UUID=`blkid /swap/swapfile | awk -F '"' '{print $4}'`
	#echo "UUID=$UUID swap swap defaults 0 0" >> /etc/fstab

	systemctl daemon-reload

	free -m
else
	echo "swap为`free -m | awk '$1=="Swap:" {print $2}'`,已有swap"
fi


#systemctl restart network ; chkconfig network on ; systemctl status network
#systemctl stop NetworkManager ; systemctl disable NetworkManager ; systemctl status NetworkManager


yum -y install vim wget deltarpm


yum -y install e2fsprogs

chattr -i /etc/resolv.conf
#lsattr /etc/resolv.conf

mv /etc/resolv.conf{,.bak}

cat > /etc/resolv.conf << EOF
nameserver 1.0.0.1
nameserver 8.8.8.8
nameserver 74.82.42.42
EOF


yum -y remove epel-release

rm -f /etc/yum.repos.d/epel*

yum clean all

yum -y update

cat /etc/redhat-release


yum -y install chrony

timedatectl set-ntp 1

timedatectl set-local-rtc 0

timedatectl set-timezone Asia/Taipei
#rm -f /etc/localtime
#ln -sv /usr/share/zoneinfo/Asia/Taipei /etc/localtime

systemctl restart chronyd

timedatectl
#cp /usr/share/zoneinfo/Asia/Taipei /etc/localtime
#timedatectl list-timezones
#hwclock -w


#yum -y install deltarpm
#echo "deltarpm=0" >> /etc/yum.conf
yum -y install vim wget curl zip unzip tar xz bzip2 gzip git net-tools expect tcl deltarpm mlocate bind-utils yum-utils screen policycoreutils-python bsdtar openssl passwd


setenforce 0


systemctl stop firewalld ; systemctl disable firewalld

yum -y install iptables-services iptables

systemctl restart iptables ; systemctl enable iptables ; systemctl --no-pager status iptables

iptables -F

iptables -A FORWARD -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu

service iptables save
#cat /etc/sysconfig/iptables


mv /etc/sysctl.conf{,.bak}

cat > /etc/sysctl.conf << EOF
#kernel.panic = 10
vm.swappiness = 10
net.ipv4.ip_forward = 1
net.core.default_qdisc = fq
net.ipv4.tcp_congestion_control = bbr
EOF

#cat /proc/sys/vm/swappiness
#echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
#echo -e "net.ipv4.ip_forward = 1\n#net.ipv4.ip_forward = 0" >> /etc/sysctl.conf
#echo -e "net.core.default_qdisc = fq\nnet.ipv4.tcp_congestion_control = bbr" >> /etc/sysctl.conf

sysctl -p


rm -f /etc/yum.repos.d/epel.repo

cat > /etc/yum.repos.d/epel.repo << EOF
[epel]
name=Extra Packages for Enterprise Linux \$releasever - \$basearch
#baseurl=https://dl.fedoraproject.org/pub/epel/\$releasever/\$basearch
#wget https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-13.noarch.rpm
#wget https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/`curl -L -s https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e | grep epel-release- | awk -F '"' '{print $6}'`
metalink=https://mirrors.fedoraproject.org/metalink?repo=epel-\$releasever&arch=\$basearch&infra=\$infra&content=\$contentdir
failovermethod=priority
enabled=1
gpgcheck=1
gpgkey=https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-\$releasever
EOF


cat > /etc/yum.repos.d/codeit.el7.repo << EOF
[CodeIT]
name=CodeIT
baseurl=https://repo.codeit.guru/packages/centos/\$releasever/\$basearch/
#baseurl=https://repo.codeit.guru/packages/centos/7/x86_64/
enabled=1
gpgcheck=1
gpgkey=https://repo.codeit.guru/RPM-GPG-KEY-codeit
EOF


yum -y install python python2-pip

yum -y install httpd mod_ssl mod_md


mkdir -pv /data/www/html

wget -O /data/www/html/webshop.zip https://github.com/doudouhn6/httpd-openssl/raw/master/webshop.zip

unzip -d /data/www/html /data/www/html/webshop.zip
#cd /data/www/html
#wget https://github.com/doudouhn6/httpd-openssl/raw/master/webshop.zip
#wget https://github.com/atrandys/v2ray-ws-tls/raw/master/web.zip
#unzip webshop.zip
#unzip web.zip
#cd

chown -R apache:apache /data/www/html


cp /etc/httpd/conf/httpd.conf{,.bak}

echo -e "ServerSignature Off\nServerTokens Prod" >> /etc/httpd/conf/httpd.conf


#sed -i -e 's@^SSLCertificateFile@#SSLCertificateFile@g' /etc/httpd/conf.d/ssl.conf
#sed -i -e 's@^SSLCertificateKeyFile@#SSLCertificateKeyFile@g' /etc/httpd/conf.d/ssl.conf

mv /etc/httpd/conf.d/ssl.conf{,.bak}

cat > /etc/httpd/conf.d/ssl.conf << EOF
Listen 443 https

Protocols h2 http/1.1

SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog

SSLSessionCache         shmcb:/run/httpd/sslcache(512000)
SSLSessionCacheTimeout  300

SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin

SSLCryptoDevice builtin
EOF


cat > /etc/httpd/conf.d/wp.conf << EOF
<VirtualHost *:80>
    DocumentRoot "/data/www/html"
    ServerName www.your_domain
    ServerAlias your_domain
    DirectoryIndex index.html index.php
    #ProxyRequests Off
    #ProxyPassMatch ^/(.*\.php)\$ fcgi://127.0.0.1:9000/data/www/html/\$1
        <Directory "/data/www/html">
            Options None
            AllowOverride None
            Require all granted
        </Directory>
</VirtualHost>
EOF

sed -i -e 's@your_domain@'$your_domain'@g' /etc/httpd/conf.d/wp.conf

systemctl restart httpd && systemctl enable httpd ; systemctl --no-pager status httpd


#pip install --upgrade pip


wget -O /usr/local/bin/certbot-auto https://github.com/doudouhn6/doudouhn6.github.com/raw/master/certbot-auto
#wget -O /usr/local/bin/certbot-auto https://dl.eff.org/certbot-auto

chmod 744 /usr/local/bin/certbot-auto

PATH=$PATH:/usr/local/bin
#vim /etc/profile
#export PATH=$PATH:/usr/local/bin
#source /etc/prpfile

#certbot-auto -n
#certbot-auto --non-interactive

certbot-auto certonly --agree-tos --non-interactive --no-eff-email --email $your_mail --webroot -w /data/www/html -d www.$your_domain -d $your_domain --no-self-upgrade
#certbot-auto certonly --agree-tos --non-interactive --no-eff-email --email $your_mail --webroot -w /data/www/html -d www.$your_domain -d $your_domain


cat > /etc/httpd/conf.d/wp.conf << EOF
<VirtualHost *:80>
    DocumentRoot /data/www/html
    ServerName www.your_domain
    ServerAlias your_domain
    DirectoryIndex index.html index.php

    Redirect permanent / https://www.your_domain/
    #RedirectMatch permanent ^/(.*)\$ http://www.your_domain/\$1
    #RewriteRule ^/(.*) https://%{SERVER_NAME}/\$1 [R,L]
    #ProxyRequests Off
    #ProxyPassMatch ^/(.*\.php)\$ fcgi://127.0.0.1:9000/data/www/html/\$1
        <Directory "/data/www/html">
            Options None
            AllowOverride None
            Require all granted
        </Directory>
</VirtualHost>

<VirtualHost *:443>
    DocumentRoot /data/www/html
    ServerName www.your_domain
    ServerAlias your_domain
    DirectoryIndex index.html index.php

    <If "%{HTTP_HOST} == 'your_domain'">
        Redirect permanent / https://www.your_domain/
        #RedirectMatch permanent ^/(.*)\$ https://www.your_domain/\$1
    </If>

    #ProxyRequests Off
    #ProxyPassMatch ^/(.*\.php)\$ fcgi://127.0.0.1:9000/data/www/html/\$1
    #ProxyPassMatch ^/(wp-status|ping)\$ fcgi://127.0.0.1:9000/\$1
        <Directory "/data/www/html">
            Options None
            AllowOverride None
            Require all granted
        </Directory>

    CustomLog "logs/wp_access_log" combined
    ErrorLog "logs/wp_error_log"

    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/www.your_domain/cert.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/www.your_domain/privkey.pem
    SSLCertificateChainFile /etc/letsencrypt/live/www.your_domain/chain.pem
    SSLCACertificateFile /etc/letsencrypt/live/www.your_domain/fullchain.pem

    SSLHonorCipherOrder on
</VirtualHost>
EOF

sed -i -e 's@your_domain@'$your_domain'@g' /etc/httpd/conf.d/wp.conf

#sed -i -e '$a\LoadModule rewrite_module modules/mod_rewrite.so' /etc/httpd/conf/httpd.conf
#sed -i -e '/Include conf.modules.d/a\LoadModule rewrite_module modules/mod_rewrite.so' /etc/httpd/conf/httpd.conf
#setsebool -P httpd_can_network_connect 1

systemctl restart httpd.service ; systemctl --no-pager status httpd


curl https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh | bash

v2port="$(($RANDOM + 10000))"

v2id="$(cat '/proc/sys/kernel/random/uuid')"


cat > /usr/local/etc/v2ray/config.json << EOF
{
  "log": {
    "access": "/var/log/v2ray/access.log",
    "error": "/var/log/v2ray/error.log",
    "loglevel": "warning"
  },
  "inbounds": [
    {
      "listen":"127.0.0.1",
      "port": v2port,
      "protocol": "vmess",
      "settings": {
        "clients": [
          {
            "id": "v2id",
            "level": 1,
            "alterId": 64
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "wsSettings": {
        "path": "/ray"
        }
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom",
      "settings": {}
    }
  ]
}
EOF

sed -i -e 's@v2port@'$v2port'@g' -e 's@v2id@'$v2id'@g' /usr/local/etc/v2ray/config.json

systemctl restart v2ray && systemctl enable v2ray ; systemctl --no-pager status v2ray


cat > /etc/httpd/conf.d/wp.conf << EOF
<VirtualHost *:80>
    #ServerAdmin webmaster@localhost
    ServerName www.your_domain
    ServerAlias your_domain
    DocumentRoot /data/www/html
    Redirect permanent / https://www.your_domain/
</VirtualHost>

<IfModule mod_ssl.c>
    <VirtualHost _default_:443>
        #ServerAdmin webmaster@localhost
        ServerName www.your_domain
        ServerAlias your_domain
        DocumentRoot /data/www/html

        CustomLog "logs/wp_access_log" combined
        ErrorLog "logs/wp_error_log"
        LogLevel info ssl:warn

        Alias /log/ "/var/log/"
        <Directory "/var/log/">
            Options Indexes MultiViews FollowSymLinks
            AllowOverride None
            #Order deny,allow
            #Deny from all
            #Allow from all
            Require all granted
        </Directory>

        SSLProtocol all -TLSv1 -TLSv1.1 -SSLv2 -SSLv3
        #SSLProtocol -all +TLSv1 +TLSv1.1 +TLSv1.2 +TLSv1.3
        SSLCipherSuite    ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
        #:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:AES
        #SSLCipherSuite    ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
        #SSLCipherSuite HIGH:!aNULL:!MD5:!3DES
        #SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA
        SSLHonorCipherOrder on

        ##SSL Engine Switch:
        #Enable/Disable SSL for this virtual host.
        SSLEngine on
        SSLCertificateFile /etc/letsencrypt/live/www.your_domain/cert.pem
        SSLCertificateKeyFile /etc/letsencrypt/live/www.your_domain/privkey.pem
        SSLCertificateChainFile /etc/letsencrypt/live/www.your_domain/chain.pem
        SSLCACertificateFile /etc/letsencrypt/live/www.your_domain/fullchain.pem
        
        #RewriteEngine On

        #SSLProxyEngine On
        
        <LocationMatch "/ray">
            ProxyPass ws://127.0.0.1:v2port/ray upgrade=WebSocket
            ProxyAddHeaders Off
            ProxyPreserveHost On
            RequestHeader set Host %{HTTP_HOST}s
            RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s
        </LocationMatch>
    </VirtualHost>
</IfModule>
EOF

sed -i -e 's@your_domain@'$your_domain'@g' -e 's@v2port@'$v2port'@g' /etc/httpd/conf.d/wp.conf

systemctl restart httpd v2ray ; systemctl --no-pager status httpd v2ray
#systemctl reset-failed v2ray.service


rm -f /etc/yum.repos.d/elrepo.repo

cat > /etc/yum.repos.d/elrepo.repo << EOF
### Name: ELRepo.org Community Enterprise Linux Repository for el7
### URL: http://elrepo.org/
[elrepo]
name=ELRepo.org Community Enterprise Linux Repository - el7
baseurl=http://elrepo.org/linux/elrepo/el7/\$basearch/ http://mirrors.coreix.net/elrepo/elrepo/el7/\$basearch/ http://mirror.rackspace.com/elrepo/elrepo/el7/\$basearch/ http://repos.lax-noc.com/elrepo/elrepo/el7/\$basearch/
mirrorlist=http://mirrors.elrepo.org/mirrors-elrepo.el7
enabled=1
gpgcheck=1
gpgkey=https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
protect=0

[elrepo-kernel]
name=ELRepo.org Community Enterprise Linux Kernel Repository - el7
baseurl=http://elrepo.org/linux/kernel/el7/\$basearch/ http://mirrors.coreix.net/elrepo/kernel/el7/\$basearch/ http://mirror.rackspace.com/elrepo/kernel/el7/\$basearch/ http://repos.lax-noc.com/elrepo/kernel/el7/\$basearch/
mirrorlist=http://mirrors.elrepo.org/mirrors-elrepo-kernel.el7
enabled=1
gpgcheck=1
gpgkey=https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
protect=0
EOF

yum -y install kernel-ml


yum -y install grubby
#grubby --default-kernel
#grubby --info=ALL
#grubby --set-default /boot/vmlinuz-5.10.5-1.el7.elrepo.x86_64

grub2-set-default 0

grub2-mkconfig -o /boot/grub2/grub.cfg


#sysctl net.ipv4.tcp_available_congestion_control
#sysctl net.ipv4.tcp_congestion_control
#lsmod | grep bbr


echo "========================"
echo -e "\033[32;40m安装完成，现在可以使用了\033[0m\naddress    $your_domain\nport    443\nid    $v2id\nalterid    64\nsecurity    auto\nremarks    `curl -s ipv4.icanhazip.com`\nnetwork    ws\ntype    none\nhost\npath    /ray\ntls    false" | awk '{printf "%-15s%-1s\n",$1,$2}'
echo "========================"
#cat v2info.txt | awk '{printf "%-15s%-15s\n",$1,$2}'


mv /etc/selinux/config{,.bak}

echo -e "SELINUX=disabled\nSELINUXTYPE=targeted" > /etc/selinux/config && shutdown -r now

#rm -rf /usr/bin/v2ray/* /etc/v2ray/* /var/log/v2ray/* /etc/systemd/system/v2ray.service